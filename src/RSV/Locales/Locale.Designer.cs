//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReadySunValley.Locales {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Locale {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Locale() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ReadySunValley.Locales.Locale", typeof(Locale).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 
        ///Replacement for Microsoft PC Health Check app (currently down!) 
        ///
        ///This project was forked initially from https://github.com/mag-nif-i-cent/Affinity11
        /// 
        ///You can also reach out to me on
        ///\ttwitter.com/builtbybel
        ///
        ///(C) 2021, Builtbybel ähnelt.
        /// </summary>
        internal static string AppInfo {
            get {
                return ResourceManager.GetString("AppInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking CPU architecture [2/14] ähnelt.
        /// </summary>
        internal static string assessmentCPUArchitecture {
            get {
                return ResourceManager.GetString("assessmentCPUArchitecture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking CPU Compatibility [6/14] ähnelt.
        /// </summary>
        internal static string assessmentCPUCompatibility {
            get {
                return ResourceManager.GetString("assessmentCPUCompatibility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking Core [5/14] ähnelt.
        /// </summary>
        internal static string assessmentCPUCores {
            get {
                return ResourceManager.GetString("assessmentCPUCores", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking CPU speed [4/14] ähnelt.
        /// </summary>
        internal static string assessmentCPUSpeed {
            get {
                return ResourceManager.GetString("assessmentCPUSpeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MHz Frequency ähnelt.
        /// </summary>
        internal static string assessmentCPUSpeedFormat {
            get {
                return ResourceManager.GetString("assessmentCPUSpeedFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking DirectX &amp;&amp; WDDM2 [11/14] ähnelt.
        /// </summary>
        internal static string assessmentDirectXWDDM {
            get {
                return ResourceManager.GetString("assessmentDirectXWDDM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking Display [3/14] ähnelt.
        /// </summary>
        internal static string assessmentDisplay {
            get {
                return ResourceManager.GetString("assessmentDisplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die inch ähnelt.
        /// </summary>
        internal static string assessmentDisplayFormat {
            get {
                return ResourceManager.GetString("assessmentDisplayFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking Graphics card [12/14] ähnelt.
        /// </summary>
        internal static string assessmentGPU {
            get {
                return ResourceManager.GetString("assessmentGPU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking Internet connection [14/14] ähnelt.
        /// </summary>
        internal static string assessmentInet {
            get {
                return ResourceManager.GetString("assessmentInet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No ähnelt.
        /// </summary>
        internal static string assessmentInetFail {
            get {
                return ResourceManager.GetString("assessmentInetFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Available ähnelt.
        /// </summary>
        internal static string assessmentInetOK {
            get {
                return ResourceManager.GetString("assessmentInetOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking Partition Types [7/14] ähnelt.
        /// </summary>
        internal static string assessmentPartitionType {
            get {
                return ResourceManager.GetString("assessmentPartitionType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking RAM Compatibility [9/14] ähnelt.
        /// </summary>
        internal static string assessmentRAM {
            get {
                return ResourceManager.GetString("assessmentRAM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking Secure Boot [8/14] ähnelt.
        /// </summary>
        internal static string assessmentSecureBoot {
            get {
                return ResourceManager.GetString("assessmentSecureBoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unsupported ähnelt.
        /// </summary>
        internal static string assessmentSecureBootFail {
            get {
                return ResourceManager.GetString("assessmentSecureBootFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Supported ähnelt.
        /// </summary>
        internal static string assessmentSecureBootOK {
            get {
                return ResourceManager.GetString("assessmentSecureBootOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking Disk size [10/14] ähnelt.
        /// </summary>
        internal static string assessmentStorage {
            get {
                return ResourceManager.GetString("assessmentStorage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Components not ready for Windows 11 ähnelt.
        /// </summary>
        internal static string assessmentSummaryFail {
            get {
                return ResourceManager.GetString("assessmentSummaryFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You&apos;re ready for Sun Valley! ähnelt.
        /// </summary>
        internal static string assessmentSummaryOK {
            get {
                return ResourceManager.GetString("assessmentSummaryOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking system requirements [1/14] ähnelt.
        /// </summary>
        internal static string assessmentSystemRequirements {
            get {
                return ResourceManager.GetString("assessmentSystemRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking TPM version [13/14] ähnelt.
        /// </summary>
        internal static string assessmentTPM {
            get {
                return ResourceManager.GetString("assessmentTPM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not present ähnelt.
        /// </summary>
        internal static string assessmentTPMFail {
            get {
                return ResourceManager.GetString("assessmentTPMFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (Not supported) ähnelt.
        /// </summary>
        internal static string assessmentTPMLow {
            get {
                return ResourceManager.GetString("assessmentTPMLow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Compare with App ähnelt.
        /// </summary>
        internal static string btnCompareUtil {
            get {
                return ResourceManager.GetString("btnCompareUtil", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Capture and Share on Twitter ähnelt.
        /// </summary>
        internal static string btnPnlShareScreen {
            get {
                return ResourceManager.GetString("btnPnlShareScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Capture and Share on Twitter ähnelt.
        /// </summary>
        internal static string btnShareScreen {
            get {
                return ResourceManager.GetString("btnShareScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Compare with Microsoft ähnelt.
        /// </summary>
        internal static string checkCompareMS {
            get {
                return ResourceManager.GetString("checkCompareMS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Back to my results ähnelt.
        /// </summary>
        internal static string checkCompareMSBack {
            get {
                return ResourceManager.GetString("checkCompareMSBack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your CPU meets the soft requirements, it&apos;s just not listed on the offical list of supported processors. ähnelt.
        /// </summary>
        internal static string hoveCPUInfo {
            get {
                return ResourceManager.GetString("hoveCPUInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open @github.com/builtbybel/readysunvalley ähnelt.
        /// </summary>
        internal static string hoverAssetInfo {
            get {
                return ResourceManager.GetString("hoverAssetInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your system needs to support a UEFI boot mode, right now your system is booting using Legacy. This doesn&apos;t necessarily mean that your system doesn&apos;t support it. Check your motherboard, system manual or BIOS for more information. ähnelt.
        /// </summary>
        internal static string hoverBootBad {
            get {
                return ResourceManager.GetString("hoverBootBad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your CPU doesn&apos;t meet the specification requirements, see individual info about frequency or cores below. ähnelt.
        /// </summary>
        internal static string hoverCPUBad {
            get {
                return ResourceManager.GetString("hoverCPUBad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You don&apos;t have enough processing cores to run Windows 11.&quot; ähnelt.
        /// </summary>
        internal static string hoverCPUCoresBad {
            get {
                return ResourceManager.GetString("hoverCPUCoresBad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your CPU frequency doesn&apos;t meet the minimum requirements for Windows 11. ähnelt.
        /// </summary>
        internal static string hoverCPUSpeedBad {
            get {
                return ResourceManager.GetString("hoverCPUSpeedBad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your DirectX version is too low. This doesn&apos;t necessarily mean that your system doesn&apos;t support higher versions. Check DXDIAG for more information. ähnelt.
        /// </summary>
        internal static string hoverDiectXBad {
            get {
                return ResourceManager.GetString("hoverDiectXBad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die One or more of your monitors are too small to work on Windows 11. ähnelt.
        /// </summary>
        internal static string hoverDisplayBad {
            get {
                return ResourceManager.GetString("hoverDisplayBad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die From the leaked version of Windows 11, It can be seen that the Setup file (ISO File) size is 4.54 GB. Considering that the leaked version does not have all the features, we can say that the actual file size will be between 4.5 to 6 GB.  Just keep in mind that Windows 11 requires a disk with at least 64 GB of storage space. ähnelt.
        /// </summary>
        internal static string hoverFreeSpaceBad {
            get {
                return ResourceManager.GetString("hoverFreeSpaceBad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Windows 11 Home edition requires internet connectivity and a Microsoft account to complete device setup on first use. Switching a device out of Windows 11 Home in S mode also requires internet connectivity. ähnelt.
        /// </summary>
        internal static string hoverInetBad {
            get {
                return ResourceManager.GetString("hoverInetBad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your system needs to support GPT partition types, right now your system is booting using MBR. This doesn&apos;t necessarily mean that your system doesn&apos;t support it. Check your motherboard, system manual or bios for more information. ähnelt.
        /// </summary>
        internal static string hoverPartitionBad {
            get {
                return ResourceManager.GetString("hoverPartitionBad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your RAM does not meet the minimum requirements for Windows 11. ähnelt.
        /// </summary>
        internal static string hoverRAMBad {
            get {
                return ResourceManager.GetString("hoverRAMBad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Run check again ähnelt.
        /// </summary>
        internal static string hoverRecheck {
            get {
                return ResourceManager.GetString("hoverRecheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Secure Boot functionality is missing. You can bypass the Secure boot requirements with ReadySunValley. Use the repair link in the right panel. ähnelt.
        /// </summary>
        internal static string hoverSecureBootBad {
            get {
                return ResourceManager.GetString("hoverSecureBootBad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your drive does not have enough capacity to run Windows 11. ähnelt.
        /// </summary>
        internal static string hoverStorageBad {
            get {
                return ResourceManager.GetString("hoverStorageBad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die If no TPM is present, you’ll probably find it’s been disabled in the UEFI. ähnelt.
        /// </summary>
        internal static string hoverTPMBad {
            get {
                return ResourceManager.GetString("hoverTPMBad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your TPM version is too low. If you’re running an older version of TPM (1.2 typically), then you may be able to update it to TPM 2.0 with a firmware update. ähnelt.
        /// </summary>
        internal static string hoverTPMInfo {
            get {
                return ResourceManager.GetString("hoverTPMInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your Windows Display Driver Model version does not meet the minimum requirements for Windows 11. ähnelt.
        /// </summary>
        internal static string hoverWDDMBad {
            get {
                return ResourceManager.GetString("hoverWDDMBad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TPM and Secure Boot restriction has been bypassed. ähnelt.
        /// </summary>
        internal static string infoBypassDone {
            get {
                return ResourceManager.GetString("infoBypassDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die System setttings are in place again. ähnelt.
        /// </summary>
        internal static string infoBypassUndo {
            get {
                return ResourceManager.GetString("infoBypassUndo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Don&apos;t forget to upload the results picture to Twitter. ähnelt.
        /// </summary>
        internal static string infoCaptureHint {
            get {
                return ResourceManager.GetString("infoCaptureHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want to compare the results with the Utility &quot;WhyNotWin11&quot;? ähnelt.
        /// </summary>
        internal static string infoCompareUtil {
            get {
                return ResourceManager.GetString("infoCompareUtil", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ready! So now put the two apps next to each other and take a look at the results. ähnelt.
        /// </summary>
        internal static string infoCompareUtilDownloadMessage {
            get {
                return ResourceManager.GetString("infoCompareUtilDownloadMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Architecture ähnelt.
        /// </summary>
        internal static string lblBitness {
            get {
                return ResourceManager.GetString("lblBitness", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking... ähnelt.
        /// </summary>
        internal static string lblBitnessCheck {
            get {
                return ResourceManager.GetString("lblBitnessCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Boot Method ähnelt.
        /// </summary>
        internal static string lblBootType {
            get {
                return ResourceManager.GetString("lblBootType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking... ähnelt.
        /// </summary>
        internal static string lblBootTypeCheck {
            get {
                return ResourceManager.GetString("lblBootTypeCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cores ähnelt.
        /// </summary>
        internal static string lblCores {
            get {
                return ResourceManager.GetString("lblCores", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking... ähnelt.
        /// </summary>
        internal static string lblCoresCheck {
            get {
                return ResourceManager.GetString("lblCoresCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking CPU Compatibility... ähnelt.
        /// </summary>
        internal static string lblCPU {
            get {
                return ResourceManager.GetString("lblCPU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DirectX ähnelt.
        /// </summary>
        internal static string lblDirectX {
            get {
                return ResourceManager.GetString("lblDirectX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking... ähnelt.
        /// </summary>
        internal static string lblDirectXCheck {
            get {
                return ResourceManager.GetString("lblDirectXCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disk Partition ähnelt.
        /// </summary>
        internal static string lblDiskType {
            get {
                return ResourceManager.GetString("lblDiskType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking... ähnelt.
        /// </summary>
        internal static string lblDiskTypeCheck {
            get {
                return ResourceManager.GetString("lblDiskTypeCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display ähnelt.
        /// </summary>
        internal static string lblDisplay {
            get {
                return ResourceManager.GetString("lblDisplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking... ähnelt.
        /// </summary>
        internal static string lblDisplayCheck {
            get {
                return ResourceManager.GetString("lblDisplayCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Free Space ähnelt.
        /// </summary>
        internal static string lblFreeSpace {
            get {
                return ResourceManager.GetString("lblFreeSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking... ähnelt.
        /// </summary>
        internal static string lblFreeSpaceCheck {
            get {
                return ResourceManager.GetString("lblFreeSpaceCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your Compatibility Results ähnelt.
        /// </summary>
        internal static string lblHeader {
            get {
                return ResourceManager.GetString("lblHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Internet ähnelt.
        /// </summary>
        internal static string lblInet {
            get {
                return ResourceManager.GetString("lblInet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking... ähnelt.
        /// </summary>
        internal static string lblInetCheck {
            get {
                return ResourceManager.GetString("lblInetCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MHz ähnelt.
        /// </summary>
        internal static string lblMhz {
            get {
                return ResourceManager.GetString("lblMhz", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking... ähnelt.
        /// </summary>
        internal static string lblMhzCheck {
            get {
                return ResourceManager.GetString("lblMhzCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die RAM ähnelt.
        /// </summary>
        internal static string lblRAM {
            get {
                return ResourceManager.GetString("lblRAM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking... ähnelt.
        /// </summary>
        internal static string lblRAMCheck {
            get {
                return ResourceManager.GetString("lblRAMCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Secure Boot ähnelt.
        /// </summary>
        internal static string lblSecureBoot {
            get {
                return ResourceManager.GetString("lblSecureBoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking... ähnelt.
        /// </summary>
        internal static string lblSecureBootCheck {
            get {
                return ResourceManager.GetString("lblSecureBootCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking system requirements... ähnelt.
        /// </summary>
        internal static string lblStatus {
            get {
                return ResourceManager.GetString("lblStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Storage ähnelt.
        /// </summary>
        internal static string lblStorage {
            get {
                return ResourceManager.GetString("lblStorage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking... ähnelt.
        /// </summary>
        internal static string lblStorageCheck {
            get {
                return ResourceManager.GetString("lblStorageCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die *Move the cusor over a failed result to get more information ähnelt.
        /// </summary>
        internal static string lblSubHeader {
            get {
                return ResourceManager.GetString("lblSubHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TPM ähnelt.
        /// </summary>
        internal static string lblTPM {
            get {
                return ResourceManager.GetString("lblTPM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking... ähnelt.
        /// </summary>
        internal static string lblTPMCheck {
            get {
                return ResourceManager.GetString("lblTPMCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WDDM2 ähnelt.
        /// </summary>
        internal static string lblWDDM {
            get {
                return ResourceManager.GetString("lblWDDM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking... ähnelt.
        /// </summary>
        internal static string lblWDDMCheck {
            get {
                return ResourceManager.GetString("lblWDDMCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Click here to fix some of these failed results with a registry hack ähnelt.
        /// </summary>
        internal static string lnkCompatibilityFix {
            get {
                return ResourceManager.GetString("lnkCompatibilityFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Undo Bypass ähnelt.
        /// </summary>
        internal static string menuBypassUndo {
            get {
                return ResourceManager.GetString("menuBypassUndo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Vote here! ähnelt.
        /// </summary>
        internal static string menuVote {
            get {
                return ResourceManager.GetString("menuVote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Does your hardware qualify for Windows 11? ähnelt.
        /// </summary>
        internal static string menuVoteContent {
            get {
                return ResourceManager.GetString("menuVoteContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die If you are attempting to install Windows 11 and receive a message stating, &quot;This PC can&apos;t run Windows 11&quot; it is likely that you do not have a TPM 2.0 requirement, Secure Boot or 4GB of RAM.\n\nThe good news is that Microsoft includes a new &quot;LabConfig&quot; registry key that allows you to configure settings to bypass the TPM 2.0, the 4GB memory, and Secure Boot requirements.\n\nPlease note, that by disabling the TPM 2.0 requirement, you are effectively reducing the security in Windows 11\n\nDo you want to bypass  [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string optionBypass {
            get {
                return ResourceManager.GetString("optionBypass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die App update available ähnelt.
        /// </summary>
        internal static string updateTitle {
            get {
                return ResourceManager.GetString("updateTitle", resourceCulture);
            }
        }
    }
}
